BFS or DFS
BFS 模板。
from collections import deque
class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        islands = 0
        if not grid or not grid[0]:
            return 0
        for i in range(len(grid)):
            for j in range(len(grid[i])):
                if grid[i][j] == '1':
                    self.bfs(grid,i,j)
                    islands+=1
        return islands
    def bfs(self,grid,x,y):
        queue = deque([(x,y)])
        while queue:
            x,y = queue.popleft()
            for delta_x,delta_y in [(0,1),(1,0),(0,-1),(-1,0)]:
                if not self.is_valid(grid,x+delta_x,y+delta_y):
                    continue
                queue.append((x+delta_x,y+delta_y))
                grid[x+delta_x][y+delta_y] = '0'
    def is_valid(self, grid, x, y):
        n, m = len(grid), len(grid[0])
        return 0 <= x < n and 0 <= y < m and grid[x][y] == '1'
